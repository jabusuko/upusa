-- Load WindUI with error handling
local WindUI
local loadSuccess, loadError = pcall(function()
    WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
end)

if not loadSuccess or not WindUI then
    warn("Failed to load WindUI:", loadError)
    return
end

-- Initialize services ONCE
_G.Services = _G.Services or {}
_G.Services.ReplicatedStorage = game:GetService("ReplicatedStorage")
_G.Services.Players = game:GetService("Players")
_G.Services.RunService = game:GetService("RunService")

-- Initialize variables
_G.Vars = _G.Vars or {}
_G.Fishing = _G.Fishing or {}

WindUI:AddTheme({
    Name = "Fyy Exploit", 
    
    Accent = WindUI:Gradient({                                                  
        ["0"] = { Color = Color3.fromHex("#1f1f23"), Transparency = 0 },        
        ["100"]   = { Color = Color3.fromHex("#18181b"), Transparency = 0 },    
    }, {                                                                        
        Rotation = 0,                                                           
    }),                                                                         
    Dialog = Color3.fromHex("#161616"),
    Outline = Color3.fromHex("#FFFFFF"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#101010"),
    Button = Color3.fromHex("#52525b"),
    Icon = Color3.fromHex("#a1a1aa")
})

local Window = WindUI:CreateWindow({
    Title = "FyyExploit - Fast Fishing v2.0",
    Icon = "slack", 
    Author = "Fyy X Fish IT",
    Folder = "FyyConfig",
    
    Size = UDim2.fromOffset(530, 300),
    MinSize = Vector2.new(320, 300),
    MaxSize = Vector2.new(850, 560),
    Transparent = true,
    Theme = "Dark",
    Resizable = true,
    SideBarWidth = 150,
    BackgroundImageTransparency = 0.42,
    HideSearchBar = false,
    ScrollBarEnabled = false,
})

Window:SetToggleKey(Enum.KeyCode.G)

WindUI:Notify({
    Title = "FyyLoader",
    Content = "Fast Fishing v2.0 Loaded! Press G",
    Duration = 4, 
    Icon = "slack",
})

-- Create tabs
local Auto = Window:Tab({
    Title = "Main",
    Icon = "play", 
})

-- Get services
local ReplicatedStorage = _G.Services.ReplicatedStorage
local Players = _G.Services.Players
local player = Players.LocalPlayer

-- Get remotes
local REEquipToolFromHotbar = ReplicatedStorage.Packages._Index["sleitnick_net@0.2.0"].net["RE/EquipToolFromHotbar"]
local RFChargeFishingRod = ReplicatedStorage.Packages._Index["sleitnick_net@0.2.0"].net["RF/ChargeFishingRod"]
local RFRequestFishingMinigameStarted = ReplicatedStorage.Packages._Index["sleitnick_net@0.2.0"].net["RF/RequestFishingMinigameStarted"]
local REFishingCompleted = ReplicatedStorage.Packages._Index["sleitnick_net@0.2.0"].net["RE/FishingCompleted"]
local REUnequipToolFromHotbar = ReplicatedStorage.Packages._Index["sleitnick_net@0.2.0"].net["RE/UnequipToolFromHotbar"]
local RFCancelFishingInputs = ReplicatedStorage.Packages._Index["sleitnick_net@0.2.0"].net["RF/CancelFishingInputs"]
local REFishCaught = ReplicatedStorage.Packages._Index["sleitnick_net@0.2.0"].net["RE/FishCaught"]

-- Variables
local running = false
local equipped = false
local lastFishTime = 0
local lastResetTime = 0
local fishCheckEnabled = false
local initialSetupDone = false

-- NEW: Super Fast Mode
local superFastMode = false
local fishCaught = 0
local sessionStartTime = 0

-- Safe remote functions
local function safeFire(remote, arg)
    if not remote then return false end
    local ok, err = pcall(function()
        if arg ~= nil then remote:FireServer(arg) else remote:FireServer() end
    end)
    return ok
end

local function safeInvoke(remote, arg1, arg2)
    if not remote then return nil end
    local ok, res = pcall(function()
        if arg1 ~= nil and arg2 ~= nil then
            return remote:InvokeServer(arg1, arg2)
        elseif arg1 ~= nil then
            return remote:InvokeServer(arg1)
        else
            return remote:InvokeServer()
        end
    end)
    return ok and res or nil
end

-- Fishing functions
local function equipToolOnce()
    if not equipped then
        for i = 1, 3 do
            safeFire(REEquipToolFromHotbar, 1)
        end
        equipped = true
    end
end

local function resetTool()
    safeFire(REUnequipToolFromHotbar)
    equipped = false
    equipToolOnce()
end

local function doChargeAndRequest()
    if superFastMode then
        -- SUPER FAST: Parallel processing
        task.spawn(function()
            safeInvoke(RFChargeFishingRod, 2)
        end)
        
        for i = 1, 3 do
            task.spawn(function()
                safeInvoke(RFRequestFishingMinigameStarted, -1.25, 1)
            end)
        end
    else
        -- NORMAL FAST: Standard processing
        safeInvoke(RFChargeFishingRod, 2)
        for i = 1, 1 do
            safeInvoke(RFRequestFishingMinigameStarted, -1.25, 1)
            task.wait()
        end
    end
end

local function forceResetFishing()
    for i = 1, 2 do
        safeInvoke(RFCancelFishingInputs)
    end
    
    resetTool()
    task.wait(0.5) 
    doChargeAndRequest()  
    lastFishTime = tick() 
end

local function fishCheckLoop()
    local retryCount = 0
    local maxRetries = 15
    local checkTimeout = superFastMode and 4 or 6
    
    while running and fishCheckEnabled do
        local currentTime = tick()
        if currentTime - lastFishTime >= checkTimeout and lastFishTime > 0 then
            retryCount = retryCount + 1
            forceResetFishing()
            
            if retryCount >= maxRetries then
                retryCount = 0
            end
        else
            retryCount = 0
        end
        task.wait(0.5)
    end
end

local function spamCompletedLoop()
    while running do
        local spamCount = superFastMode and 5 or 3
        for i = 1, spamCount do
            task.spawn(function()
                safeFire(REFishingCompleted)
            end)
        end
        task.wait()
    end
end

local function equipToolLoop()
    while running do
        safeFire(REEquipToolFromHotbar, 1)
        local waitTime = superFastMode and 1 or 2
        task.wait(waitTime)
    end
end

local function periodicResetLoop()
    while running do
        task.wait(300)
        if running then
            resetTool()
            lastResetTime = tick()
        end
    end
end

local function setupFishCaughtHandler()
    REFishCaught.OnClientEvent:Connect(function(fishName, fishData)
        lastFishTime = tick()
        fishCaught = fishCaught + 1
        
        if running then
            if superFastMode then
                -- Instant re-cast, no delay
                for i = 1, 3 do
                    task.spawn(function()
                        doChargeAndRequest()
                    end)
                end
            else
                -- Normal fast mode
                task.spawn(function()
                    doChargeAndRequest()
                end)
            end
        end
    end)
end

local function fishingCycle()
    lastResetTime = tick()
    lastFishTime = tick()
    fishCheckEnabled = true
    
    setupFishCaughtHandler()
    
    task.spawn(spamCompletedLoop)
    task.spawn(equipToolLoop)
    task.spawn(fishCheckLoop)
    task.spawn(periodicResetLoop)
    
    task.wait(0.5)  
    doChargeAndRequest()  
    initialSetupDone = true
    
    while running do
        task.wait()
    end
    
    fishCheckEnabled = false
    initialSetupDone = false
end

-- UI Section
local Section = Auto:Section({ 
    Title = "🎣 Fast Instant Fishing",
})

local autoFishingToggle = Auto:Toggle({
    Title = "Auto Fishing", 
    Type = "Toggle",
    Desc = "INSTANT FISHING - WITH ANTI STUCK SYSTEM",
    Default = false,
    Callback = function(state) 
        running = state
        if running then
            fishCaught = 0
            sessionStartTime = tick()
            task.spawn(fishingCycle)
        else
            safeInvoke(RFCancelFishingInputs)
            equipped = false
            fishCheckEnabled = false
            initialSetupDone = false
            
            -- Show stats
            if fishCaught > 0 then
                local sessionTime = math.floor((tick() - sessionStartTime) / 60)
                local fishPerMinute = sessionTime > 0 and math.floor(fishCaught / sessionTime) or fishCaught
                WindUI:Notify({
                    Title = "🎯 Fishing Stats",
                    Content = string.format("Caught: %d fish\nTime: %d min\nRate: %d fish/min", fishCaught, sessionTime, fishPerMinute),
                    Duration = 5,
                    Icon = "activity"
                })
            end
        end
    end
})

local SuperFastToggle = Auto:Toggle({
    Title = "⚡ SUPER FAST MODE ⚡",
    Type = "Toggle",
    Desc = "ULTRA SPEED - 3x FASTER (Use carefully!)",
    Default = false,
    Callback = function(state)
        superFastMode = state
        if state then
            WindUI:Notify({
                Title = "⚡ SUPER FAST MODE",
                Content = "Ultra speed activated! ⚡",
                Duration = 3,
                Icon = "zap"
            })
        end
    end
})

local ShowStatsButton = Auto:Button({
    Title = "📊 Show Fishing Stats",
    Desc = "Display current session statistics",
    Callback = function()
        if fishCaught > 0 and sessionStartTime > 0 then
            local sessionTime = math.floor((tick() - sessionStartTime) / 60)
            local fishPerMinute = sessionTime > 0 and math.floor(fishCaught / sessionTime) or fishCaught
            local mode = superFastMode and "⚡ SUPER FAST" or "🚀 FAST"
            WindUI:Notify({
                Title = "🎯 Current Session Stats",
                Content = string.format("Mode: %s\n🐟 Caught: %d fish\n⏱️ Time: %d min\n📈 Rate: %d fish/min", mode, fishCaught, sessionTime, fishPerMinute),
                Duration = 6,
                Icon = "bar-chart"
            })
        else
            WindUI:Notify({
                Title = "⚠️ No Data",
                Content = "Start Auto Fishing first!",
                Duration = 3,
                Icon = "alert-circle"
            })
        end
    end
})

Auto:Space()
Auto:Divider()

-- Info section
local InfoSection = Auto:Section({
    Title = "📝 Information",
})

Auto:Label({
    Title = "Fast Instant Fishing v2.0",
    Desc = "Created by Fyy X Fish IT"
})

Auto:Label({
    Title = "How to Use:",
    Desc = "1. Enable Auto Fishing\n2. Optional: Enable Super Fast Mode\n3. Click Show Stats to see progress"
})

WindUI:Notify({
    Title = "✅ Ready!",
    Content = "Fast Fishing v2.0 loaded successfully!",
    Duration = 3,
    Icon = "check"
})

print("🚀 Fast Fishing v2.0 - Loaded Successfully!")
print("⚡ Super Fast Mode: Available")
print("📊 Stats Tracking: Enabled")
